# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
# before_script:
#   - apt-get update -yqq
#   - apt-get install -yqq --no-install-recommends build-essential

# Use cargo to test the project
test:cargo:
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo test --workspace --verbose

#  Restrictions to run only on master and tags if necessary
#  only:
#    refs:
#      - master
#      - tags


crosscompile:
  allow_failure: true
  before_script:
    - cp .cargo-cross-config /usr/local/cargo/config
    - rustup target add armv7-unknown-linux-gnueabihf
    - dpkg --add-architecture armhf
    - apt-get update
    - apt-get install -y libc6-armhf-cross libc6-dev-armhf-cross gcc-arm-linux-gnueabihf

  script:
    - cargo check --target x86_64-unknown-linux-gnu
    - cargo check --target armv7-unknown-linux-gnueabihf
    # Build
    - cargo build --release --target armv7-unknown-linux-gnueabihf
